# Generated by Django 4.2.6 on 2024-06-30 14:36

import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Əlavə edilmə tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Nəşr tarixi')),
                ('blog_title', models.CharField(max_length=150, unique=True, verbose_name='Blogun başlığı')),
                ('blog_content', ckeditor.fields.RichTextField(null=True, verbose_name='Blogun mətni')),
                ('blog_image', models.ImageField(unique=True, upload_to='blog/', verbose_name='Blogun fotosu')),
                ('slug', models.SlugField(blank=True, help_text='Bu qismi boş buraxın. Avtomatik doldurulacaq.', max_length=250, null=True, verbose_name='Link adı')),
                ('blog_author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Bloglar',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Blog_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Əlavə edilmə tarixi')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Yenilənmə tarixi')),
                ('status', models.CharField(choices=[('DF', 'Draft'), ('PB', 'Published')], default='DF', max_length=2)),
                ('published_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Nəşr tarixi')),
                ('comment_text', models.TextField(verbose_name='Bloga rəylər')),
                ('slug', models.SlugField(blank=True, help_text='Bu qismi boş buraxın. Avtomatik doldurulacaq.', max_length=250, null=True, verbose_name='Link adı')),
                ('active', models.BooleanField(default=True)),
                ('blog', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comments', to='blog.blog')),
                ('comment_author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_comment', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Bloga rəy',
                'verbose_name_plural': 'Bloga rəylər',
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Kateqoriya adı')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Link adı')),
            ],
            options={
                'verbose_name': 'Kateqoriya',
                'verbose_name_plural': 'Kateqoriyalar',
            },
        ),
        migrations.CreateModel(
            name='IPs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_ip', models.GenericIPAddressField(editable=False, null=True, verbose_name='IP ünvanı')),
            ],
            options={
                'verbose_name': 'IP ünvanı',
                'verbose_name_plural': 'IP ünvanları',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Teq adı')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Link adı')),
            ],
            options={
                'verbose_name': 'Teq',
                'verbose_name_plural': 'Teqlər',
            },
        ),
        migrations.CreateModel(
            name='LikeDislike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('like', 'Like'), ('dislike', 'Dislike')], max_length=7)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.blog_comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='blog',
            name='categories',
            field=models.ManyToManyField(related_name='blogs', to='blog.category', verbose_name='Kateqoriyalar'),
        ),
        migrations.AddField(
            model_name='blog',
            name='tags',
            field=models.ManyToManyField(related_name='blogs', to='blog.tag', verbose_name='Teqlər'),
        ),
        migrations.AddField(
            model_name='blog',
            name='viewed_ips',
            field=models.ManyToManyField(editable=False, related_name='blogs', to='blog.ips', verbose_name='Blogların görüntüləndiyi IP ünvanları'),
        ),
        migrations.AddIndex(
            model_name='blog_comment',
            index=models.Index(fields=['-published_at'], name='blog_blog_c_publish_122f0b_idx'),
        ),
        migrations.AddIndex(
            model_name='blog',
            index=models.Index(fields=['-published_at'], name='blog_blog_publish_fd0506_idx'),
        ),
    ]
